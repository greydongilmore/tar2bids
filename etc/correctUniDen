#!/bin/bash


if [ "$#" -lt 2 ]
then

echo "MP2RAGE sequence does not always produce the UNI-DEN, but can be the only T1w-like image (especially for 7T), so this script generates it if it does not exist.."
    echo "Usage: $0 <in_bids> <subj ID> <session id (optional)>"
	exit 1
fi 
in_bids=$1


#assumes python script is in same folder as this wrapper -- eventually just replace this..
exec_path=`dirname $0`

subj=$2
subj=${subj##sub-} #strip off sub- if it exists, to make consistent

if [ "$#" -gt 2 ]
then
    ses=$3
	ses=${ses##ses-} #strip off sub- if it exists, to make consistent
fi
 


	if [ -n "$ses" ]
    then
        out_folder=sub-$subj/ses-$ses
    else
        out_folder=sub-$subj
    fi


    for uni in `ls $in_bids/$out_folder/anat/*acq-UNI_*MP2RAGE.nii.gz 2> /dev/null` 
    do
#	echo uni: $uni
	beforeacq=${uni%_acq-UNI_*}
	afteracq=${uni##*_acq-UNI_}
	afteracq_stripped=${afteracq%_MP2RAGE.nii.gz}

	inv1=${beforeacq}_inv-1_${afteracq}
	inv2=${beforeacq}_inv-2_${afteracq}
	existing_t1w=${beforeacq}_acq-MP2RAGE_${afteracq_stripped}_T1w.nii.gz

#	echo inv1: $inv1
#	echo inv2: $inv2
#	echo existing_t1w: $existing_t1w
	if [ -e $inv1 -a -e $inv2 -a ! -e $existing_t1w ]
	then

		new_t1w=${beforeacq}_acq-MP2RAGEpostproc_${afteracq_stripped}_T1w.nii.gz
		echo $exec_path/mp2rage_genUniDen.py $uni $inv1 $inv2 $new_t1w
		 $exec_path/mp2rage_genUniDen.py $uni $inv1 $inv2 $new_t1w
		
		#copy a json from uni over -- TODO: edit json too
		cp ${uni%%.nii.gz}.json ${new_t1w%%.nii.gz}.json

	fi
	

    done
